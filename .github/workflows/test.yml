---
"on":
  push:
    branches: [main]
  pull_request:
    branches: [main]
  pull_request_review:
    types: [submitted]

name: Test
jobs:
  test_offline:
    if: "!github.event.review || github.event.review.state == 'approved'"
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    name: Offline tests
    runs-on: "${{ matrix.os }}"
    steps:
      - name: "Git: enable longpaths"
        run: git config --global core.longpaths true
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2.2.1
        with:
          shared-key: cache
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: "--package xtask -- test --offline"

  test_on_real_server_anonymous:
    if: "!github.event.review"
    needs: test_offline
    name: Test on a real server (anonymous)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        plex_server_version: ["1.31.1.6733-bc0674160","1.29.2.6364-6d72b0cf6","1.27.2.5929-a806c5905"]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2.2.1
        with:
          shared-key: cache-anonymous
      - name: "Test against real server [anonymous]"
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: "--package xtask -- test --online --docker-tag '${{ matrix.plex_server_version }}' --deny-unknown-fields"

  test_on_real_server_authenticated_free:
    if: "(github.ref == 'refs/heads/main' && !github.event.review) || github.event.review.state == 'approved' || github.repository == github.event.pull_request.head.repo.full_name"
    needs: test_offline
    strategy:
      fail-fast: false
      matrix:
        plex_server_version: ["1.31.1.6733-bc0674160","1.29.2.6364-6d72b0cf6","1.27.2.5929-a806c5905"]
    name: Test on a real server (authenticated free account)
    runs-on: ubuntu-latest
    env:
      X_PLEX_CLIENT_IDENTIFIER: "${{ secrets.X_PLEX_CLIENT_IDENTIFIER_FREE }}"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2.2.1
        with:
          shared-key: cache-authenticated
      - name: "Test against real server [authenticated]"
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: "--package xtask -- test --online --docker-tag '${{ matrix.plex_server_version }}' --token '${{ secrets.PLEX_API_AUTH_TOKEN_FREE }}' --deny-unknown-fields"

  test_on_real_server_authenticated_plexpass:
    if: "(github.ref == 'refs/heads/main' && !github.event.review) || github.event.review.state == 'approved' || github.repository == github.event.pull_request.head.repo.full_name"
    needs: test_offline
    strategy:
      fail-fast: false
      matrix:
        plex_server_version: ["1.31.1.6733-bc0674160","1.29.2.6364-6d72b0cf6","1.27.2.5929-a806c5905"]
    name: Test on a real server (authenticated plexpass account)
    runs-on: ubuntu-latest
    env:
      X_PLEX_CLIENT_IDENTIFIER: "${{ secrets.X_PLEX_CLIENT_IDENTIFIER_PLEXPASS }}"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2.2.1
        with:
          shared-key: cache-authenticated
      - name: "Test against real server [authenticated]"
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: "--package xtask -- test --online --docker-tag '${{ matrix.plex_server_version }}' --token '${{ secrets.PLEX_API_AUTH_TOKEN_PLEXPASS }}' --deny-unknown-fields"

  collect_coverage:
    if: "!github.event.review"
    name: Collect code coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --workspace --timeout 120 --out Xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
